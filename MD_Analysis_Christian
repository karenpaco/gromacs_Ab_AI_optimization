gmx pdb2gmx -f model.pdb -o model_processed.gro
python -m propka model.gro -o 7.4
    #(we use TIP3P water which is compatible with our Amber99SB-ILDN forcefield)
gmx pdb2gmx -f model.pdb -o model_processed.gro -his |  gmx pdb2gmx -f model.pdb -o model_processed.gro -inter
    #(in this case is we have to determine the protonation state of histidine)
    #there is not possible to set an specific pH value (for our purposes is going to be 7.4) but it is possible to analyse and 
    #determine all the protonation states of each aminoacid specificly if we analyse them with propka, determine their PKa and 
    #finally see which is the protonation state of each aminoacid at 7.4 pH)
    #after we analyze with propka at a specific pH "python -m propka model.gro -o 7.4"
    #we shoud use "pdb2gmx -f protein.pdb -inter" and it wil guide us throught each aminoacid to determine their protonation state
gmx editconf -f model_processed.gro -o model_newbox.gro -c -d 1.0 -bt cubic
gmx solvate -cp model_newbox.gro -cs spc216.gro -o model_solv.gro -p topol.top 
    #(SPC216: simple point charge water is a pre-equilibrated box of 216 SPC water molecules and it is used for 3-site water models like TIP3P)
gmx grompp -f ions.mdp -c model_solv.gro -p topol.top -o ions.tpr
gmx genion -s ions.tpr -o model_solv_ions.gro -p topol.top -pname NA -nname CL -neutral -conc 0.15 
    #(gromacs reads the concentration in mol/L and our target is 150mM)
gmx grompp -f minim.mdp -c model_solv_ions.gro -p topol.top -o em.tpr
gmx mdrun -v -deffnm em 
    #(here we wil use our energy_minimization.sh)
    #sbatch script.sh (it has to be executable, if for any case it is not use "chmod +x script.sh and then "dos2unix script.sh")
gmx energy -f em.edr -o potential.xvg
gmx grompp -f nvt.mdp -c em.gro -r em.gro -p topol.top -o nvt.tpr
gmx mdrun -deffnm nv 
    #(here we will use our nvt_ensemble.sh)
gmx energy -f nvt.edr -o temperature.xvg
gmx grompp -f npt.mdp -c nvt.gro -r nvt.gro -t nvt.cpt -p topol.top -o npt.tpr
gmx mdrun -deffnm npt 
    #(here we will use our npt_ensemble.sh)
gmx energy -f npt.edr -o pressure.xvg
gmx energy -f npt.edr -o density.xvg
gmx grompp -f md.mdp -c npt.gro -t npt.cpt -p topol.top -o md_0_1.tpr
sbatch -p gpu --gres=gpu:a100:2 --mem=100g --time=168:00:00 md.sh 
    #(here we use our md.sh)
    #scontrol show job #ABCDE
    #scancel ABCDE

##analysis 
gmx trjconv -s md_0_1.tpr -f md_0_1.xtc -o md_0_1_noPBC.xtc -pbc mol -center | gmx trjconv -s md_0_1.tpr -f md_0_1.xtc -o md_0_1_noPBC.xtc -pbc cluster -center
gmx rms -s md_0_1.tpr -f md_0_1_noPBC.xtc -o rmsd.xvg -tu ns
gmx rms -s em.tpr -f md_0_1_noPBC.xtc -o rmsd_xtal.xvg -tu ns
gmx rmsf -s md_0_1.tpr -f md_0_1_noPBC1.xtc -o rmsf.xvg

##generating differnet index files to analyze RMSD and RMSF separatelly 
gmx make_ndx -f md_0_1.gro -o index.ndx 
    #a 1-100
    #name protein1
    #a 101-200
    #name protein2
    #a 500-5600
    #name complex but ignoring the first 500 atoms
    #as you can see here,this is how you can select a specific protein or a section of a protein in the complex to be analyzed in RMSF or RMSD
    #you can also perform this by residue (for example r 1-100 then enter then r 101-200 then enter then q)
gmx make_ndx -n index.ndx
    #you can use this to modify the index file or overwrite it (by adding -o index.ndx). This can also be used to visualize the index files and see which groups you have created, once you have check what you have there just dont modify it and press q to exit 
    # you can mix groups using pipeline, for example: 16 | 17 will allow you to mix the groups 16 and 17, this can be usedfull when you have ligands in you run or if you wnat to make soure you are adding the 2 proteins of you complex together (but this sould be already in the "1 protein" option. Remmeber that the "2 protein-H" option is the protein without considering hidrogens

##analysing RMSD and RMSF separately using the index file
    #this only works to generate hte RMSD of each protein, it will not work for the entire complex
gmx trjconv -s md_0_1.tpr -f md_0_1.xtc -o fitted.xtc -pbc mol -center
    #select system (group 0) and then protein (group 1)
gmx rms -s model.pdb -f fitted.xtc -n index.ndx -o rmsd_protein1.xvg -tu ns
    #select your protein from the index (protein 1 and protein 2)
gmx rmsf -s md_0_1.tpr -f md_0_1_noPBC1.xtc -n index.ndx -o rmsf_protein1.xvg
    #select your protein from the index (protein 1 and protein 2)

#####if for some reason this produce an error try this instead (spliting the model.pdb in 2 per protein, this should not be needed and typically generates more errors)
gmx editconf -f model.pdb -o protein1_reference.pdb -n index.ndx
    #select atoms1
gmx rms -s protein1_reference.pdb -f fitted.xtc -n index.ndx -o rmsd_protein1.xvg
    #select atoms
    #select atoms1
gmx editconf -f model.pdb -o protein2_reference.pdb -n index.ndx
    #select atoms2
gmx rms -s protein2_reference.pdb -f fitted.xtc -n index.ndx -o rmsd_protein1.xvg
    #select atoms2
    #select atoms2

##Generating the Cluster Analysis
gmx trjconv -s md_0_1.tpr -f trajectory.xtc -o md_0_1.xtc -pbc mol -center -fit rot+trans 
    #this is nost necesary but just in case. You can use the one in step 51
gmx cluster -s md_0_1.tpr -f md_0_1_noPBC.xtc -n index.ndx -o clusters.xpm -g cluster.log -dist cluster.xvg -method gromos -cutoff 0.2
gmx cluster -s md_0_1.tpr -f md_0_1_noPBC.xtc -o index.xpm -g cluster.log -cl cluster.pdb 
    #if the previous comand to generate the cluster.pdb does not work use this one:
gmx trjconv -s md_0_1.tpr -f md_0_1_noPBC.xtc -o cluster.xtc
gmx cluster -s md_0_1.tpr -f cluster.xtc -o cluster.xpm -g cluster.log -cl clusters.pdb -method gromos -cutoff 0.2

    #This for the system in general
    #I selected the Carbon alpha or backbone, the protein choice takes a lot of time so the system wil kill it
    #I seelcted alpha carbon or backbone for the output as well
    #In case this is not ok delete the index fiel from the code line (it shoud not be a problen becuase here you are analysing all the system but just in case)

#########Generating images suring the molecualr dynamics run
  for t in {0..100000..1000}; do           #0..100000..1000 means from 0 to 100000ps every 1000ps of snapshot
      gmx trjconv -s md_0_1.tpr -f md_0_1_noPBC.xtc -n index.ndx -o snapshot_${t}ps.pdb -dump $t
  done
     #then select the numbers to evaluate if you want the protein (1) or the system (0), etc
#it is possible to also use this will print 1 or 17 or the needed number several times (the ones that you need)
    for t in {0..100000..1000}; do
        echo "Processing time $t ps...";
        printf "17\n" | gmx trjconv -s md_0_1.tpr -f md_0_1_noPBC.xtc -n index.ndx -o snapshot_${t}ps.pdb -dump $t; done
    done 

#this will generate different .pdb files that can be joint using is a single one using: 
cat snapshot1.pdb snapshot2.pdb snapshot3.pdb > combined_snapshots.pdb
#here is an automatic way to combine al the generated snapshots in one .pdb file:

    output_file="combined_snapshots.pdb"
    > $output_file  # Clear the output file if it exists

    for pdb_file in snapshot_*ps.pdb; do
        echo "Adding $pdb_file to $output_file..."
        echo "MODEL $(basename $pdb_file .pdb | grep -o '[0-9]*')" >> $output_file
        cat "$pdb_file" >> $output_file
        echo "ENDMDL" >> $output_file
    done

#If you upload each snapshot separatelly and combine them in pymol, then aligned them to generate a superimpose picture with all the snapshots
#it seems there is no automatic way to do this, so you will have to do it manually in pymol or try to find a pymol script

#Interaction analysis
#you can just se the interaction_analysis.py file to generate the heatmaps of intercation and the index file for the analysis in gromacs
#(pair wise analysis, minimun distance interaction and number of hydrogen bonds). 
#for this analysis always use the md_0_1.xtc (it is going to be that file every time you want to generate a heatmail with MDAnalysis in python, do nto use the md_0_1_noPBC,xtc)
#here you will generate a interacting_residues_cogs.ndx which is an index file that separates only the residues (for each protein) that are interacting between these 2 proteins
#below an specific cutof porint (normaly below 5A), whit this index file oyu can perform the minimun distance, pariwise distance and number of hidrogen bonds analysis in GROMACS

#minimun distance 
gmx mindist -s md_0_1.tpr -f md_0_1.xtc -n interacting_residues_cogs.ndx -od mindist.xvg -on num_contact.xvg -d 0.5
     #the interacting_residues_cogs.ndx is the ndx file generated in the interaction_analysis.py, the -d is the distance in nm

#pairwise distance
gmx pairdist -s md_0_1.tpr -f md_0_1.xtc -n interacting_residues_cogs.ndx -o pairdist.xvg -ref Interacting_Protein1 -sel Interacting_Protein2
     #-ref Interacting_Protein1 -sel Interacting_Protein2 were determined in interacting_residues_cogs.ndx

#Hidrogen bonds
gmx hbond -s md_0_1.tpr -f md_0_1_noPBC1.xtc -n interacting_residues_cogs.ndx -num hbondsnew.xvg
     #this tells you the number of hidrogen bonds present in the interactions. 

#It is posible to perform a salt bridge analysis, the code is in interaction_analysis.py


#secondary structure analysis
gmx dssp -f md_0_1.xtc -s md_0_1.tpr -o structure.xvg -num numstruc.xvg
    #This will generate a .dat file that wil be used in the python script to generate the secondary structure map to see the change of secondary structures along time

#MMPBSA analysis 
   #First the groups have to be wel deifned in the index file

module load gromacs
module load gmx_mmpbsa
   #load both modules (gromacs and gmx_mmbpsa) at the same time

gmx_MMPBSA --create_input PB

    #remember always to unse the non boundary conditions trajectory file
    #mmPBSA (PB) stands for Molecular Mechanics Poisson-Boltzmann Surface Area and mmGBSA (GB) stands for Molecular mechanics with generalised Born and surface area
    # G stands for free energy and E estands for energy
    #this is to generate a mmbpsa.in file. Remember that you have 2 options: mmPBSA (for protein-protein interactions and complexes) and mmGBSA (for ligand interactions)
    #mmGBSA is less computational expensive than mmPBSA (the mmPBSA takes in considetarion TΔS in the ΔGbind = ΔEmm + ΔGsolv - TΔS ecuation, is this why is more expensive)
    #ΔEmm = Emm of the complex - (Emm of the receptor + Emm of the ligand) (mm stands for molecular mechanics)
    #ΔGsolv = Gsolv of the complex - (Gsolv of the receptor + Gsolv of the ligand)
    #Gsolv = Ggb + Gsa (gb stands for polar solvatation energy and sa stands for non-polar solvattaion energy)
    #TΔS is the entropic contribution of the free energy (ofthen no calculated in the mmGBSA)
    #Binding free energy calculation = 1. obtain energy values of complex, receptor and ligand for each component (MM, GB and SA) -> 2. calculate ΔE (difference in energy) which is the diference between the energy of the complex and the sum of the energies of the receptor and ligand for each term
     #3.Sum the terms: combine the molecular mechanics energy diffrence nad solvatation energy differnece to obtain the total binding free energy: ΔGbind = ΔEm + ΔGsolv
    #negative values indicate strong binding energy (spontaneous interaction) and low standar deviation indicated that the binding energy is consistent across the frames = stable binding energy over time
    #strong binding < -7kcal/mol (thermodinamically favorable, exergonic binding process), moderate bingind : -5 to -7kcal/mol and weak to non-binding: close to  or positive kcal/mol (less likely to form a stable complex)
#Energy componens in mmGBSA: BOND (energy contribution of bond stretching in the system), ANGLE (energy contrib from bond angle bending), DIHED (energy contrib from dihedran angles that are related to rotation around bonds), UB (urey-bradley term which is the interaction of atoms separated by 2 bonds considering both stretching adn angle binding (1-3 interactions)), IMP (improper dihedral energy which is used to maintain planarity or chirality in the molecule), CMAP (correction map energy, it is often used in force fileds energy to improve the representation of protein backbone dihedral angles), VDWAALS (van der waals energy contribution fron non-bonded interactions between atoms), EEL (electrostatic (coulombic inteaction) energy contribution), 1-4VDW(van der waals energy between atoms separated by 3 bonds (1-4 interactions))
# the usual output per frame is: frame | GGAS (Kcal/mol) | GSOLV (kcal/mol) | ΔGbind (kcal/mol), this last term is the sum of GGAS and GSOLV.
#GGAS is the Gas Phase Energy. this is represented by the sum of the molecular interactions in absence of a solvent. GGAS = Ebond + Eangle + Ediheral +Evdw + Eelec. This energy describes how 
#GSOLV is the solvatation energy of the system. It represent the energy to trnasfer the system from the gas phase (void) to a solvent (generally an aqueus phase). GSOLV = Gpolar + Gnon-polar. When we talk about "trasnfering the system" it refers to a theoretical process that evaluates how the free energy of a system (like a complex protein-protein, protein-ligand, etc) changes when it goes (its being trnasfered) fron an environment without solvent (void ir a gas phase) to an environment in which the system is surrounded by a solvent (tipicaly water)  
#Gpolar(EGB) is the polar energy of solvatation calculated tipically by Poison-Boltzman (PB) model or Generalized Born (GB) model. It acounts for the electrostatic interactions between the solute (e.g., ligand or protein) and the solvent, modeled implicitly.
#Gnon-polar (ESURF) is the non-polar energy of solvatation taht depens of the Solvent Accesible Surface (SAS). It is calculated like; Gnon-polar = γ⋅SAS+b in which γ is the surface tension coefficient (tipically from water) and b is a constant term. Gnon-polar It accounts for van der Waals and hydrophobic interactions between the solute and solvent.


gmx_MMPBSA -O -i mmpbsa.in -cs md_0_1.tpr -ct md_0_1_noPBC.xtc -ci indexfinal3.ndx -cg 17 18 -cp topol.top -o results_mmpbsa.dat -eo results_mmpbsa.csv
   #in this comand the numbers 17 and 18 are the 2 proteins in the protein-protein system repectively. Both have to be specified in this commandline

#for now it seems it only works with leaprc.protein.ff14SB forcefield, I could not run it with AMBER or Amber99SB-ILDN forcefields, never change this forcefield part

gmx_MMPBSA_ana -f filename_info (tipically _GMXMMPBSA_info) will open the ploting tool (analyze function) to see all the results in a graphycal way

#If you want to perform a PCA analysis using gibson free energy to see the conformational states of your system, always use the non boundary condition trajectory file. Remember that you have to generate an index file that captures the residues for the 2 proteins (in case of protein-protein inteaction) or protein/ligand but it will be beter if it only captures the alpha backbone because if you use all the atopes per resude it will take a lot of computational resources

