gmx pdb2gmx -f model.pdb -o model_processed.gro (optional)
python -m propka model.gro -o 7.4 | python -m propka model.pdb -o 7.4 (optional)
    #(we use TIP3P water which is compatible with our Amber99SB-ILDN forcefield)
gmx pdb2gmx -f model.pdb -o model_processed.gro | gmx pdb2gmx -f model.pdb -o model_processed.gro -his |  gmx pdb2gmx -f model.pdb -o model_processed.gro -inter
    #6 (for Amber99SB-ILDN forcefield) and 1 (for TIP3P water)
    #(in this case is we have to determine the protonation state of histidine)
    #there is not possible to set an specific pH value (for our purposes is going to be 7.4) but it is possible to analyse and 
    #determine all the protonation states of each aminoacid specificly if we analyse them with propka, determine their PKa and 
    #finally see which is the protonation state of each aminoacid at 7.4 pH)
    #after we analyze with propka at a specific pH "python -m propka model.gro -o 7.4"
    #we shoud use "pdb2gmx -f protein.pdb -inter" and it wil guide us throught each aminoacid to determine their protonation state
    #Once you select all the protonation state if GROMACS ask you for link amoniacids between each other mark no (n)
gmx editconf -f model_processed.gro -o model_newbox.gro -c -d 1.0 -bt cubic
gmx solvate -cp model_newbox.gro -cs spc216.gro -o model_solv.gro -p topol.top 
    #(SPC216: simple point charge water is a pre-equilibrated box of 216 SPC water molecules and it is used for 3-site water models like TIP3P. The 216SPC is a file that contains 216 molecules of preequilibrated water taht it is used as a start point to fill a simulation box with water, This 216SPC is like a template that is used to fill you box with as much water as it is needed so even if the tmeplate has 216 water molecues of preequilibrated water you box wil not have only 216 water moleucles, your box wil end with thounsands of preequilibrated TIP3P water molecules that comes from the 216SPC file that was used as a template)
    # use: grep "SOL" topol.top to check if the topology file was updated with the water (SOL) molecules (you should see values once you execute this code, for example SOL 66850)
gmx grompp -f ions.mdp -c model_solv.gro -p topol.top -o ions.tpr
    #grep -E "NA|CL|ION" topol.top you should not see any values here because IONS will be added in the next step, this is just ot verify that IONS are not present here and will be added in the next step
gmx genion -s ions.tpr -o model_solv_ions.gro -p topol.top -pname NA -nname CL -neutral -conc 0.15 
    # use the option 13 to add the ions (SOL)
    #(gromacs reads the concentration in mol/L and our target is 150mM or 0.15M)
    # use: grep -E "NA|CL" topol.top to check if the topology file was updated (you should see values once you execute this code, for example NA 10 CL 10)
gmx grompp -f minim.mdp -c model_solv_ions.gro -p topol.top -o em.tpr
gmx mdrun -v -deffnm em 
    #(here we wil use our energy_minimization.sh)
    #This step is used to delete tensions or atomic clashesbefore starting a molecular dynamics. In a protein at the beggining the initial stucture can have atoms very lose to each other or tense bonds which generates high forces, this can produce a unestable simulation. We will eliminate clashes, reduce extremely high forces in bonds and angles, stabilize the molecular geometry and generate a soft beggining for the NVP/NPT ensembles. This algorithm adjust the positions of the atoms to reduce the potential energy of the system using algoritms like: Steepest Descend (goes in the steepest direction in which the energy gets reduced, it is fast and robust but not very precise and it gets used in the first part of the minimization), Conjugate gradient (cg) more precise but slower, it is used after the steep if the system still having high forces. L-BFGS which is more efficient in small systems or with low dimentionallity. If the systems gets stable it means it is ready for the NVT/NPT ensemble andalso for the molecular dynamics.
    #sbatch script.sh (it has to be executable, if for any case it is not use "chmod +x script.sh and then "dos2unix script.sh")
    #grep -E "SOL|NA|CL" topol.top (after the minimization you should check that the topology file contains the ions and water molecules yet. the amount of CL, NA ions and water SOL should remain the same after the energy minimization)
gmx energy -f em.edr -o potential.xvg
    #select the option 10 0
    #if the system does not reache a stable minimun it can be a serious problem. The energy should decrease progresively if it gets stuck or keeps decreasing without reaching a minimun there is something wrong. The minimization stops for "Fmax too large", the energy fluctuates instead decreaseing or the atoms overlap or the system collapse. You can increase the number of steps in the energy minimization simualtion (nseps) so you will allow the system to find a stable minimun. You can change the minimization algorith (integrator option in the em.mdp) the recomended is the Steepest Descent (steep), it is fast and efficient is not you can use conjugate gradient (integrator = cg) it is more precise but it requires the system is close to a minimun. If the system collapses or the energy fluctuates you can reduce the step size of the minimization (emstep), the smaller the steps (around 0.001) it will avoid sudden movements and will improve stability. You can use constrain in hidrogen bond (constrains = h-bond) if the forces are very high, this will reduce extreme movements of the hidrogen bonds which can stabilize the minimization. Check on possible atomic clashes, if there are overalpping atoms the minimization will fail (if you see a high Fmax (>10⁵ kJ/mol·nm) you can move the moleucles a bit with gmc editconf with "gmx editconf -f sistema.gro -o sistema_shifted.gro -translate 0.1 0.1 0.1" this can separate the overlaping atoms). Verify the topology, verify if there are atoms with charges or incorrect radius, for example you have 5000 SOL molecules after gmx solvate, make sure that number is correct. Make sure the parameters of the forcefield are correct in the gmx pdb2gmx, correct all the warings in atoms or bonds before minimize.   
gmx grompp -f nvt.mdp -c em.gro -r em.gro -p topol.top -o nvt.tpr
gmx mdrun -deffnm nvt 
    #this ensemble maitains a fixed volume (the simulation box does not change its size) the temperature gets cosntant through a thermostate like Berendsen, Nose-Hoover or V-rescale. It will equilibrate the temperature before going into the NPT ensemble or when you want to study processes in whihc the volume does not change (simulations in water boxes) or systems in whihc the pressure is not relevant (Remember thsi is used to adjust the temperature with studies at a fixed volume)
    #(here we will use our nvt_ensemble.sh)
    #grep -E "SOL|NA|CL" topol.top (after the minimization you should check that the topology file contains the ions and water molecules yet. the amount of CL, NA ions and water SOL should remain the same after the NVT ensemble)
gmx energy -f nvt.edr -o temperature.xvg
    #select the option 16 0
    #a variation of +-5K for small systems and +-2K for large systems is perfect!a variation like 10/20K is considered inestable so check on that. If the systems initially fluctuates a lot you can use a Berendsen thermostat in the first 20-50ps and then use V-rescale for the rest of the simulation (v-scale is a better Berdensen version that maintains the temperature with realistic physical fluctuations and avoid non-physical effects it is like using V-rescale instead Berdensen) You can also reduce the dt of the system if it is tempearture inestable or define the groups (like protein and non-protein groups). Make sure the system is well minimized so it wont start with wierd temperatures (you can execute an extra step of minimization , if there are atomic clashes or non physical interactions the temperature can go up suddently). If the tempeature is not well defined you can generate new thermal velocities with a seed in the nvt.mdp file (using gen-vel = yes, gen-temp = 300 and gen-seed = -1 for example, this can help to reduce initial fluctuations)
gmx grompp -f npt.mdp -c nvt.gro -r nvt.gro -t nvt.cpt -p topol.top -o npt.tpr
gmx mdrun -deffnm npt 
    #(here we will use our npt_ensemble.sh)
    #grep -E "SOL|NA|CL" topol.top (after the minimization you should check that the topology file contains the ions and water molecules yet. the amount of CL, NA ions and water SOL should remain the same after the NPT ensemble)
gmx energy -f npt.edr -o pressure.xvg
    #select the option 18 0
    #Preassure can range between +-100 bar because the instnat pressure have high fluctuations in the molecualr dynamics. It is a red flag if the pressure is outside of the target consistently
gmx energy -f npt.edr -o density.xvg
    #select the option 24 0
    #density can fluctuate between +-5 kg/m3 which is normal in simulations performed on water. A high density should be around 10>kg/m3
#in general the NPT ensemble allos the volume to change so the box can fit and reach a target volume. The temperature of the termostat remains (like in a NVT) and the pressure is controlled with a barostat (like Berendsen or Parrinello-Rahman). You will use it to equilibrate the pressure after a NVT. It is used in simulations in which he density is important like fluids, biomolecules in solutions, compressible materials, etc. It is also used to prepare a system befire the final production (stable stage of the molecualr dynamics). Remember this ensemble is used to adjust the pressure and obtain a experimental density.
#if the density or preasure are not stable you can change barostate (pcoupl option in the npt.mdp file). you can use Parrinello-Rahman barostate for long simulations. This barostate is more precise. You can also use Berendsen jsut to stabilize the simulations at the beggining 50-100ps and then change to Parrinello-Rahman, this is becuase Berendsen gets eatable quickly and do not generate realistics physical fluctuations so it should not be used in the production pahse. You can also try higher values of relaxing time (tau_p) values between 2.0 and 5.0 ps so it can soft the pressure range, if the pressure response is slow reduce tau_p to 1.0 to increase the adjust time (but not less than 1.0). The temperature control can also affect density so make sure to use v-rescale or Nose-Hoover (if you use Nose-Hoover use tau_t = 0.5 or greater to avoid exteme fluctuations). If preassure nad density variates a sudently redute the instegration step (dt), the smaller this steps more stable is the simulation but it will be slower. Also revew if the NVT was well executed, if not the NPT can start with high fluctuations. If the energy is not stable execute a longer minimization in between NVT/NPT steps. Remember that preassure fluctuates a lot given the small nuber of molecules in the simulation even in well equililibrated simulations it can variate in +-100bar instantly 
gmx grompp -f md.mdp -c npt.gro -t npt.cpt -p topol.top -o md_0_1.tpr
    #grep -E "SOL|NA|CL" topol.top (after the minimization you should check that the topology file contains the ions and water molecules yet. the amount of CL, NA ions and water SOL should remain the same before start the MD simulation)
sbatch -p gpu --gres=gpu:a100:2 --mem=100g --time=168:00:00 md.sh 
    #(here we use our md.sh)
    #scontrol show job #ABCDE
    #scancel ABCDE

##analysis 
gmx trjconv -s md_0_1.tpr -f md_0_1.xtc -o md_0_1_noPBC.xtc -pbc mol -center | gmx trjconv -s md_0_1.tpr -f md_0_1.xtc -o md_0_1_noPBC.xtc -pbc cluster -center
#this is used to correct PBC per molecule (re ensemble each molecule            #this group all the molecules in a box so it bulds all the system in a cohesive whole
#insividaully inside a box) However, does not maitain coherence in large        #it work well in large complexes (like proteins, membranes, interaction proteins, etc)
#groups so it can fragment your complex in case there are                       #and maintain the mplecules in a box. it is ideal if your system looks visually "broken" due to a PBC
#a lot of molecules conected (for systems taht can move freely                  #it is used to maintain macromolecular complexes joined like proteins and membranes
#like water or small solute

gmx rms -s md_0_1.tpr -f md_0_1_noPBC.xtc -o rmsd.xvg -tu ns # this will execute the RMSD compared with respect to the first frame (structure) of the MD
gmx rms -s em.tpr -f md_0_1_noPBC.xtc -o rmsd_xtal.xvg -tu ns #this will execite the RMSD compared with respect to the minimized structure 
gmx rmsf -s md_0_1.tpr -f md_0_1_noPBC1.xtc -o rmsf.xvg

##generating differnet index files to analyze RMSD and RMSF separatelly 
gmx make_ndx -f md_0_1.gro -o index.ndx 
    #a 1-100
    #name protein1
    #a 101-200
    #name protein2
    #a 500-5600
    #name complex but ignoring the first 500 atoms
    #as you can see here,this is how you can select a specific protein or a section of a protein in the complex to be analyzed in RMSF or RMSD
    #you can also perform this by residue (for example r 1-100 then enter then r 101-200 then enter then q)
gmx make_ndx -n index.ndx
    #you can use this to modify the index file or overwrite it (by adding -o index.ndx). This can also be used to visualize the index files and see which groups you have created, once you have check what you have there just dont modify it and press q to exit 
    # you can mix groups using pipeline, for example: 16 | 17 will allow you to mix the groups 16 and 17, this can be usedfull when you have ligands in you run or if you wnat to make soure you are adding the 2 proteins of you complex together (but this sould be already in the "1 protein" option. Remmeber that the "2 protein-H" option is the protein without considering hidrogens

##analysing RMSD and RMSF separately using the index file
    #this only works to generate hte RMSD of each protein, it will not work for the entire complex
gmx trjconv -s md_0_1.tpr -f md_0_1.xtc -o fitted.xtc -pbc mol -center
    #select system (group 0) and then protein (group 1)
gmx rms -s model.pdb -f fitted.xtc -n index.ndx -o rmsd_protein1.xvg -tu ns
    #select your protein from the index (protein 1 and protein 2)
gmx rmsf -s md_0_1.tpr -f md_0_1_noPBC1.xtc -n index.ndx -o rmsf_protein1.xvg
    #select your protein from the index (protein 1 and protein 2)

#####if for some reason this produce an error try this instead (spliting the model.pdb in 2 per protein, this should not be needed and typically generates more errors)
gmx editconf -f model.pdb -o protein1_reference.pdb -n index.ndx
    #select atoms1
gmx rms -s protein1_reference.pdb -f fitted.xtc -n index.ndx -o rmsd_protein1.xvg
    #select atoms
    #select atoms1
gmx editconf -f model.pdb -o protein2_reference.pdb -n index.ndx
    #select atoms2
gmx rms -s protein2_reference.pdb -f fitted.xtc -n index.ndx -o rmsd_protein1.xvg
    #select atoms2
    #select atoms2

##Generating the Cluster Analysis
gmx trjconv -s md_0_1.tpr -f trajectory.xtc -o md_0_1.xtc -pbc mol -center -fit rot+trans 
    #this is nost necesary but just in case. You can use the one in step 51
gmx cluster -s md_0_1.tpr -f md_0_1_noPBC.xtc -n index.ndx -o clusters.xpm -g cluster.log -dist cluster.xvg -method gromos -cutoff 0.2
gmx cluster -s md_0_1.tpr -f md_0_1_noPBC.xtc -o index.xpm -g cluster.log -cl cluster.pdb 
    #if the previous comand to generate the cluster.pdb does not work use this one:
gmx trjconv -s md_0_1.tpr -f md_0_1_noPBC.xtc -o cluster.xtc
gmx cluster -s md_0_1.tpr -f cluster.xtc -o cluster.xpm -g cluster.log -cl clusters.pdb -method gromos -cutoff 0.2
    #important: If you want to convert from time (picoseconds) to frames you can just execute: gmx check -f md_0_1_noPBC.xtc. That will give you
    #the timestep in ps. Use that timestep to divide the time (in ps) and thatway you wull find the frames. Another way to do it is just multiplying the dr (2 fs or 0.002 ps) by nstxout-compressed (Number of steps between saved frames or save compressed coordinates every 10.0 ps, this is in the md.mdp file, the value is usually 5000) so in this example 0.002 * 5000 = 10 ps which is the value that you will use to devide the time in ps and obtain the frames

    #This for the system in general
    #I selected the Carbon alpha or backbone, the protein choice takes a lot of time so the system wil kill it
    #I seelcted alpha carbon or backbone for the output as well
    #In case this is not ok delete the index fiel from the code line (it shoud not be a problen becuase here you are analysing all the system but just in case)

#########Generating images suring the molecualr dynamics run
  for t in {0..100000..1000}; do           #0..100000..1000 means from 0 to 100000ps every 1000ps of snapshot
      gmx trjconv -s md_0_1.tpr -f md_0_1_noPBC.xtc -n index.ndx -o snapshot_${t}ps.pdb -dump $t
  done
     #then select the numbers to evaluate if you want the protein (1) or the system (0), etc
#it is possible to also use this will print 1 or 17 or the needed number several times (the ones that you need)
    for t in {0..100000..1000}; do
        echo "Processing time $t ps...";
        printf "17\n" | gmx trjconv -s md_0_1.tpr -f md_0_1_noPBC.xtc -n index.ndx -o snapshot_${t}ps.pdb -dump $t; done
    done 

#this will generate different .pdb files that can be joint using is a single one using: 
cat snapshot1.pdb snapshot2.pdb snapshot3.pdb > combined_snapshots.pdb
#here is an automatic way to combine al the generated snapshots in one .pdb file:

    output_file="combined_snapshots.pdb"
    > $output_file  # Clear the output file if it exists

    for pdb_file in snapshot_*ps.pdb; do
        echo "Adding $pdb_file to $output_file..."
        echo "MODEL $(basename $pdb_file .pdb | grep -o '[0-9]*')" >> $output_file
        cat "$pdb_file" >> $output_file
        echo "ENDMDL" >> $output_file
    done

#If you upload each snapshot separatelly and combine them in pymol, then aligned them to generate a superimpose picture with all the snapshots
#it seems there is no automatic way to do this, so you will have to do it manually in pymol or try to find a pymol script

#Interaction analysis
#you can just se the interaction_analysis.py file to generate the heatmaps of intercation and the index file for the analysis in gromacs
#(pair wise analysis, minimun distance interaction and number of hydrogen bonds). 
#for this analysis always use the md_0_1.xtc (it is going to be that file every time you want to generate a heatmail with MDAnalysis in python, do nto use the md_0_1_noPBC,xtc)
#here you will generate a interacting_residues_cogs.ndx which is an index file that separates only the residues (for each protein) that are interacting between these 2 proteins
#below an specific cutof porint (normaly below 5A), whit this index file oyu can perform the minimun distance, pariwise distance and number of hidrogen bonds analysis in GROMACS

#minimun distance 
gmx mindist -s md_0_1.tpr -f md_0_1.xtc -n interacting_residues_cogs.ndx -od mindist.xvg -on num_contact.xvg -d 0.5
     #the interacting_residues_cogs.ndx is the ndx file generated in the interaction_analysis.py, the -d is the distance in nm

#pairwise distance
gmx pairdist -s md_0_1.tpr -f md_0_1.xtc -n interacting_residues_cogs.ndx -o pairdist.xvg -ref Interacting_Protein1 -sel Interacting_Protein2
     #-ref Interacting_Protein1 -sel Interacting_Protein2 were determined in interacting_residues_cogs.ndx

#Hidrogen bonds
gmx hbond -s md_0_1.tpr -f md_0_1_noPBC1.xtc -n interacting_residues_cogs.ndx -num hbondsnew.xvg
     #this tells you the number of hidrogen bonds present in the interactions. 

#It is posible to perform a salt bridge analysis, the code is in interaction_analysis.py


#secondary structure analysis
gmx dssp -f md_0_1.xtc -s md_0_1.tpr -o structure.xvg -num numstruc.xvg
    #This will generate a .dat file that wil be used in the python script to generate the secondary structure map to see the change of secondary structures along time

#MMPBSA analysis 
   #First the groups have to be wel deifned in the index file

module load gromacs
module load gmx_mmpbsa
   #load both modules (gromacs and gmx_mmbpsa) at the same time

gmx_MMPBSA --create_input PB

    #remember always to unse the non boundary conditions trajectory file
    #mmPBSA (PB) stands for Molecular Mechanics Poisson-Boltzmann Surface Area and mmGBSA (GB) stands for Molecular mechanics with generalised Born and surface area
    # G stands for free energy and E estands for energy
    #this is to generate a mmbpsa.in file. Remember that you have 2 options: mmPBSA (for protein-protein interactions and complexes) and mmGBSA (for ligand interactions)
    #mmGBSA is less computational expensive than mmPBSA (the mmPBSA takes in considetarion TΔS in the ΔGbind = ΔEmm + ΔGsolv - TΔS ecuation, is this why is more expensive)
    #ΔEmm = Emm of the complex - (Emm of the receptor + Emm of the ligand) (mm stands for molecular mechanics)
    #ΔGsolv = Gsolv of the complex - (Gsolv of the receptor + Gsolv of the ligand)
    #Gsolv = Ggb + Gsa (gb stands for polar solvatation energy and sa stands for non-polar solvattaion energy)
    #TΔS is the entropic contribution of the free energy (ofthen no calculated in the mmGBSA)
    #Binding free energy calculation = 1. obtain energy values of complex, receptor and ligand for each component (MM, GB and SA) -> 2. calculate ΔE (difference in energy) which is the diference between the energy of the complex and the sum of the energies of the receptor and ligand for each term
     #3.Sum the terms: combine the molecular mechanics energy diffrence nad solvatation energy differnece to obtain the total binding free energy: ΔGbind = ΔEm + ΔGsolv
    #negative values indicate strong binding energy (spontaneous interaction) and low standar deviation indicated that the binding energy is consistent across the frames = stable binding energy over time
    #strong binding < -7kcal/mol (thermodinamically favorable, exergonic binding process), moderate bingind : -5 to -7kcal/mol and weak to non-binding: close to  or positive kcal/mol (less likely to form a stable complex)
#Energy componens in mmGBSA: BOND (energy contribution of bond stretching in the system), ANGLE (energy contrib from bond angle bending), DIHED (energy contrib from dihedran angles that are related to rotation around bonds), UB (urey-bradley term which is the interaction of atoms separated by 2 bonds considering both stretching adn angle binding (1-3 interactions)), IMP (improper dihedral energy which is used to maintain planarity or chirality in the molecule), CMAP (correction map energy, it is often used in force fileds energy to improve the representation of protein backbone dihedral angles), VDWAALS (van der waals energy contribution fron non-bonded interactions between atoms), EEL (electrostatic (coulombic inteaction) energy contribution), 1-4VDW(van der waals energy between atoms separated by 3 bonds (1-4 interactions))
# the usual output per frame is: frame | GGAS (Kcal/mol) | GSOLV (kcal/mol) | ΔGbind (kcal/mol), this last term is the sum of GGAS and GSOLV.
#GGAS is the Gas Phase Energy. this is represented by the sum of the molecular interactions in absence of a solvent. GGAS = Ebond + Eangle + Ediheral +Evdw + Eelec. This energy describes how 
#GSOLV is the solvatation energy of the system. It represent the energy to trnasfer the system from the gas phase (void) to a solvent (generally an aqueus phase). GSOLV = Gpolar + Gnon-polar. When we talk about "trasnfering the system" it refers to a theoretical process that evaluates how the free energy of a system (like a complex protein-protein, protein-ligand, etc) changes when it goes (its being trnasfered) fron an environment without solvent (void ir a gas phase) to an environment in which the system is surrounded by a solvent (tipicaly water)  
#Gpolar(EGB) is the polar energy of solvatation calculated tipically by Poison-Boltzman (PB) model or Generalized Born (GB) model. It acounts for the electrostatic interactions between the solute (e.g., ligand or protein) and the solvent, modeled implicitly.
#Gnon-polar (ESURF) is the non-polar energy of solvatation taht depens of the Solvent Accesible Surface (SAS). It is calculated like; Gnon-polar = γ⋅SAS+b in which γ is the surface tension coefficient (tipically from water) and b is a constant term. Gnon-polar It accounts for van der Waals and hydrophobic interactions between the solute and solvent.


gmx_MMPBSA -O -i mmpbsa.in -cs md_0_1.tpr -ct md_0_1_noPBC.xtc -ci index.ndx -cg 17 18 -cp topol.top -o results_mmpbsa.dat -eo results_mmpbsa.csv -decomp
   #in this comand the numbers 17 and 18 are the 2 proteins in the protein-protein system repectively. Both have to be specified in this commandline

#for now it seems it only works with leaprc.protein.ff14SB forcefield, I could not run it with AMBER or Amber99SB-ILDN forcefields, never change this forcefield part

gmx_MMPBSA_ana -f filename_info (tipically _GMXMMPBSA_info) will open the ploting tool (analyze function) to see all the results in a graphycal way

#If you want to perform a PCA analysis using gibson free energy to see the conformational states of your system, always use the non boundary condition trajectory file. Remember that you have to generate an index file that captures the residues for the 2 proteins (in case of protein-protein inteaction) or protein/ligand but it will be beter if it only captures the alpha backbone because if you use all the atopes per resude it will take a lot of computational resources

